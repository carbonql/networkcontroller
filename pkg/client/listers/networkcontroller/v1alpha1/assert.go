/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/carbonql/networkcontroller/pkg/apis/networkcontroller/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AssertLister helps list Asserts.
type AssertLister interface {
	// List lists all Asserts in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.Assert, err error)
	// Asserts returns an object that can list and get Asserts.
	Asserts(namespace string) AssertNamespaceLister
	AssertListerExpansion
}

// assertLister implements the AssertLister interface.
type assertLister struct {
	indexer cache.Indexer
}

// NewAssertLister returns a new AssertLister.
func NewAssertLister(indexer cache.Indexer) AssertLister {
	return &assertLister{indexer: indexer}
}

// List lists all Asserts in the indexer.
func (s *assertLister) List(selector labels.Selector) (ret []*v1alpha1.Assert, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Assert))
	})
	return ret, err
}

// Asserts returns an object that can list and get Asserts.
func (s *assertLister) Asserts(namespace string) AssertNamespaceLister {
	return assertNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AssertNamespaceLister helps list and get Asserts.
type AssertNamespaceLister interface {
	// List lists all Asserts in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.Assert, err error)
	// Get retrieves the Assert from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.Assert, error)
	AssertNamespaceListerExpansion
}

// assertNamespaceLister implements the AssertNamespaceLister
// interface.
type assertNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Asserts in the indexer for a given namespace.
func (s assertNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Assert, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Assert))
	})
	return ret, err
}

// Get retrieves the Assert from the indexer for a given namespace and name.
func (s assertNamespaceLister) Get(name string) (*v1alpha1.Assert, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("assert"), name)
	}
	return obj.(*v1alpha1.Assert), nil
}
